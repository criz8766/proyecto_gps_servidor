# docker-compose.yml (Versión Corregida)

version: '3.8'
services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB} # Usará 'farmacia' desde el .env raíz
      POSTGRES_USER: ${POSTGRES_USER} # Usará 'admin' desde el .env raíz
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} # Usará 'admin' desde el .env raíz
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  mongo:
    image: mongo:6
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:2.8.1
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  pacientes:
    build:
      context: ./pacientes
    container_name: pacientes
    depends_on:
      - postgres
      - kafka
    # --- ESTA ES LA SECCIÓN MODIFICADA ---
    # En lugar de env_file, usamos 'environment' para que SÍ reemplace las variables
    # desde el .env de la raíz del proyecto.
    environment:
      AUTH0_DOMAIN: ${AUTH0_DOMAIN}
      AUTH0_API_AUDIENCE: ${AUTH0_API_AUDIENCE}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: postgres
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      ALLOWED_ORIGINS: http://localhost:3000,https://sga.arccidev.com
    ports:
      - "8000:8000"

  inventario:
    build:
      context: ./inventario
    container_name: inventario
    depends_on:
      - postgres
      - kafka
    # --- ESTA ES LA SECCIÓN MODIFICADA ---
    # Hacemos lo mismo para el servicio de inventario.
    environment:
      AUTH0_DOMAIN: ${AUTH0_DOMAIN}
      AUTH0_API_AUDIENCE: ${AUTH0_API_AUDIENCE}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: postgres
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      ALLOWED_ORIGINS: http://localhost:3000,https://sga.arccidev.com
    ports:
      - "8001:8001"

  frontend:
    build:
      context: ./frontend
      args:
        REACT_APP_AUTH0_DOMAIN: ${AUTH0_DOMAIN}
        REACT_APP_AUTH0_CLIENT_ID: ${AUTH0_CLIENT_ID}
        REACT_APP_AUTH0_API_AUDIENCE: ${AUTH0_API_AUDIENCE}
        REACT_APP_PACIENTES_API_URL: /api/pacientes
        REACT_APP_INVENTARIO_API_URL: /api/inventario
    container_name: frontend
    ports:
      - "3000:80"
    depends_on:
      - pacientes
      - inventario

  usuarios:
    container_name: usuarios
    build:
      context: ./usuarios
    # --- ESTA ES LA SECCIÓN MODIFICADA ---
    # Usamos 'environment' para ser consistentes con los otros servicios.
    # Docker Compose reemplazará estas variables con los valores del archivo .env
    environment:
      AUTH0_DOMAIN: ${AUTH0_DOMAIN}
      AUTH0_API_AUDIENCE: ${AUTH0_API_AUDIENCE} # Asegúrate que el nombre de la variable coincida con el .env
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: postgres
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    ports:
      - "8002:8000"
    volumes:
      - ./usuarios:/app
    restart: always
    depends_on:
      - postgres # Es buena práctica añadir la dependencia a la base de datos

  transacciones:
    container_name: transacciones
    build:
      context: ./transacciones
    environment:
      # Usamos las mismas variables que los otros servicios
      AUTH0_DOMAIN: ${AUTH0_DOMAIN}
      AUTH0_API_AUDIENCE: ${AUTH0_API_AUDIENCE}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8003:8000"  # Puerto 8003 de tu máquina, 8000 del contenedor
    volumes:
      - ./transacciones:/app
    restart: always
    depends_on:
      - postgres      # Depende de la base de datos
      - usuarios      # Puede que necesite consultar roles de usuario
      - inventario    # Necesitará interactuar con el stock


volumes:
  pgdata:
  mongodata: